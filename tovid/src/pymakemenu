#! /usr/bin/env python

# pymakemenu
# Generate an (S)VCD/DVD menu MPEG
# (to replace the 'makemenu' shell script)

import sys, libtovid
from libtovid import Menu, Project, TDL

if __name__ == '__main__':
    """Parse the provided command-line arguments as a Menu element."""

    # If no arguments were provided, print usage notes

    # TODO: Proper argument verification
    if len(sys.argv) < 3:
        print 'Usage: pymakemenu [options] -out NAME'
        print 'Where [options] may be any of the following:'
        print TDL.usage('Menu')
        print 'Please provide an output name (-out).'
        sys.exit()
        
    # If a TDL file name was provided, parse and generate Menus in it
    elif len(sys.argv) == 3 and sys.argv[1] == '-tdl':
        print "Generating menus from TDL: '%s'" % sys.argv[2]
        proj = Project.Project()
        proj.load_file(sys.argv[2])

        for menu in proj.get_elements('Menu'):
            print "Generating menu: '%s'" % menu.name
            libtovid.Menu.generate(menu)

    else:
        print "pymakemenu"
        args = sys.argv[1:]
        for arg in args:
            print arg
        # Insert a dummy element/name declaration
        args.insert(0, 'Menu')
        args.insert(1, '"FOO MENU"')

        # TODO: Fix this dumb redundancy in naming (same for Project.Project
        # above)
        par = TDL.Parser()
        elems = par.parse_args(args)
        print "Parsed Menu element:"
        print elems[0].tdl_string()
        print "Generating menu..."
        Menu.generate(elems[0])
