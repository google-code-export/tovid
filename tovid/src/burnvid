#! /usr/bin/env python2.4

# Inputs:
# A list of .mpg files to burn to disc
# Disc format
# Other meta-info

import sys, os, string

usage = """Usage:
    burnvid.py [-vcd|-svcd|-dvd] [-pal|-ntsc] video1 video2 ...

Example:
    burnvid.py -dvd -pal *.avi
    burnvid.py -vcd -ntsc a.mov b.avi c.mpg

"""
# Defaults
format = '-dvd'
tvsys = '-ntsc'

if __name__ == '__main__':
    videos = []
    if len(sys.argv) == 1:
        print "%s" % usage
        print "Please provide a list of video filenames."
        sys.exit()
    for arg in sys.argv[1:]:
        # TODO: Support -dvd-vcd, -half-dvd, -kvcd etc.
        if arg in ['-vcd', '-svcd', '-dvd']:
            format = arg
        elif arg in ['-pal', '-ntsc']:
            tvsys = arg
        else:
            if os.path.exists(arg):
                videos.append(arg)
            else:
                print "Can't find file: %s" % arg

        # TODO: Create a symlink with a reasonable filename
        # before calling tovid (to prevent tovid barfing on
        # wacky filename characters).

    # makemenu
    # ================

    titles = ['']
    for video in videos:
        # Underscore to space
        title = video.replace('_', ' ')
        # Strip file extension (.avi, .mpeg etc.)
        title = title[:video.rfind('.')]
        # Capitalize first letter
        title = string.capitalize(title)
        titles.append(title)
    
    print "There are the titles that will be shown on the disc menu:"
    for num in range(1, len(titles)):
        print "  %s: %s" % (num, titles[num])

    # TODO: Give user option to change titles

    cmd = 'makemenu %s %s ' % (format, tvsys)
    for title in titles:
        cmd += ' "%s" ' % title
    cmd += ' -out burnvid_menu '
    print "\n\nMaking a menu with the following command:"
    print cmd
    output = os.popen(cmd, 'r')
    for line in output.readlines():
        print line



    # tovid
    # ================

    # Filenames of encoded videos
    encoded_videos = []
    for video in videos:
        infile = os.path.realpath(video)
        outfile = '%s.tovid_encoded' % infile
        encoded_videos.append(outfile + ".mpg")

        cmd = 'tovid %s %s -in "%s" -out "%s"' % \
            (format, tvsys, infile, outfile)
        print "\n\nEncoding video with the following command:"
        print cmd
        output = os.popen(cmd, 'r')
        for line in output.readlines():
            print line

    

    # makexml
    # ================
    cmd = 'makexml %s -menu burnvid_menu.mpg ' % format
    for video in videos:
        cmd += ' "%s.tovid_encoded.mpg" ' % video
    cmd += ' burnvid_disc'
    print "\n\nCreating disc structure XML with the following command:"
    print cmd
    output = os.popen(cmd, 'r')
    for line in output.readlines():
        print line

