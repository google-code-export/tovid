#! /usr/bin/env python
# pymakexml

__doc__ = \
"""Generate vcdimager/dvdauthor XML for an (S)VCD/DVD disc (to replace the
'makexml' shell script).
"""

import os
import sys
from libtovid.author import *
from libtovid.output import red, green, blue

HEADER = """-------------------------
pymakexml
Part of tovid
http://tovid.org/
-------------------------"""


USAGE = """Usage: pymakexml [OPTIONS] {video1.mpg video2.mpg ...} -out OUTFILE[.xml]

Where OPTIONS may be:

    -dvd | -vcd | -svcd

Provide a list of .mpg video files, and they will be played back in
sequence, for example:

    pymakexml video1.mpg video2.mpg video3.mpg \\
        -out mydisc

You may organize several lists of videos into menus and sub-menus by
providing the names of menu .mpg files:

    pymakexml -menu menu1.mpg \\
        video1.mpg video2.mpg video3.mpg \\
        -out mydisc2
    pymakexml -topmenu topmenu.mpg \\
        -menu submenu1.mpg vid1.mpg vid2.mpg vid3.mpg \\
        -menu submenu2.mpg vid4.mpg vid5.mpg vid6.mpg \\
        -out mydisc3

Video chapters may be specified by including a comma-separated list
after the video filename:

    pymakexml -menu menu1.mpg \\
        video1.mpg -chapters 1:00,5:00,10:00 \\
        video2.mpg -chapters 3:00,8:00,15:00 \\
        -out mydisc4
"""

def error(message):
    """Exit with an error message, after printing usage notes."""
    print USAGE
    print red("Error: ") + message
    exit()

if __name__ == '__main__':
    """Create a Disc with the given options and generate the XML for it."""
    print HEADER

    # If no args provided, print usage notes
    if len(sys.argv) < 2:
        error("Please provide at least one video to author,"\
              " and the name of an output file.")
    
    args = sys.argv[1:]
    disc = Disc()
    outfile = None
    overwrite = False
    video = None
    
    if '-menu' not in args:
        print "No -menu option provided; creating a menuless disc."
        titleset = Titleset()
        disc.titlesets.append(titleset)

    # Parse command-line arguments
    while args:
        arg = args.pop(0)
        # Format/tvsys
        if arg in ['-dvd', '-vcd', '-svcd']:
            disc.format = arg.lstrip('-')
        elif arg in ['-pal', '-ntsc']:
            disc.tvsys = arg.lstrip('-')
        elif arg == '-overwrite':
            overwrite = True
        elif arg == '-topmenu':
            disc.topmenu = Menu(args.pop(0))
        elif arg == '-menu':
            titleset = Titleset()
            titleset.menu = Menu(args.pop(0))
            disc.titlesets.append(titleset)
        elif arg == '-chapters':
            if not video:
                error("The -chapters option must follow a video filename.")
            chapter_list = args.pop(0)
            video.chapters = chapter_list.split(',')
        elif arg == '-out':
            outfile = args.pop(0)
        elif arg.startswith('-'):
            error("Unrecognized command-line option: %s" % arg)
        # Assume everything else is a video
        else:
            video = Video(arg)
            titleset.add(video)

    # Make sure outfile was provided
    if not outfile:
        error("Please provide an output file with -out")

    # Add .xml if necessary
    if not outfile.endswith('.xml'):
        outfile = outfile + '.xml'
    
    # Check for existing file
    if os.path.exists(outfile):
        if overwrite:
            print blue("Overwriting existing file: %s" % outfile)
        else:
            error("File '%s' already exists." % outfile +\
                  " Use the -overwrite option to overwrite it.")

    disc.name = outfile.rstrip('.xml')
    
    # Print out disc structure
    print
    print "Authoring the following disc structure:"
    print
    if disc.topmenu:
        print "  Top menu:", disc.topmenu.filename
    for ts in disc.titlesets:
        if ts.menu:
            print "      Menu:", ts.menu.filename
        for video in ts.videos:
            print "          Video:", video.filename
    print

    # Get XML for authoring the disc
    if disc.format == 'dvd':
        xml = dvdauthor_xml(disc)
    else:
        xml = vcdimager_xml(disc)
    
    print "Writing XML to file:", outfile
    xml_file = open(outfile, 'w')
    xml_file.write(xml)
    xml_file.close()

    print "Done! Thanks for using pymakexml."
    