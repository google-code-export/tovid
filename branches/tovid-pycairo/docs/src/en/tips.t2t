Quick tips and tests


%!include(xhtml): ''navmenu.html''

//This document was last edited on %%mtime(%A, %d %B %Y).//


The following are some short scripts (both bash and
English) for doing debugging, testing, and comparisons on tovid.


==Comparing command-line options==

Debugging one day, I wanted to find out exactly
what different encoding options are affected by the
``-deinterlace`` option. The [tovid #tovid] script is so complex now
that even I can't remember all the random options that need to be passed
to mpeg2enc, mplayer, and other
programs upon which tovid depends.
So here's a quick bash script that shows you the difference, in detail,
between two of tovid's command-line options.

```
#!/bin/bash
tovid -debug -deinterlace dv1.avi dv1_deint > 1.log
tovid -debug dv1.avi dv1_blahblah > 2.log
diff 1.log 2.log
```


==Comparing videos==

It's often hard to compare the quality of two videos simply by
watching them. The human eye is very forgiving when it comes to video,
and it's useful to do a frame-by-frame comparison.
To get a dump of every frame in VIDEO, use the following
command:

```
$ mplayer -nosound -vo png VIDEO
```

If you want to see the difference between two images (IMAGE_1 and IMAGE_2),
use one of these commands:

```
$ convert IMAGE_1 IMAGE_2 -compose difference -composite x: &
$ convert IMAGE_1 IMAGE_2 -compose difference -composite -normalize x: &

```

These commands use [ImageMagick http://www.imagemagick.org/]
to display a grayscale representation of the difference between
IMAGE_1 and IMAGE_2, with lighter areas indicating greater difference.
The -normalize`` option is useful for images that are very similar.
Use this to get a quick visualization of image quality, in particular the
degradation and artifacts that are often introduced during conversion to another
image format.

Newer versions of ImageMagick include the compare
utility. Try:

```
$ compare IMAGE_1 IMAGE_2 x: &
```

If you like numbers, you might enjoy:

```
$ compare -metric MAE IMAGE_1 IMAGE_2 null:
```

Try the metrics MSE, PSE, PSNR, and RMSE for different comparison types.
For more on comparing images, see [Anthony Thyssen's notes http://www.cit.gu.edu.au/~anthony/info/graphics/image_comparing] on the subject.

==Running tovid in the background==

Try: ``tovid (-options) >logfile 2>&1 </dev/null &``.
This will run tovid in the background (so you can do other
things with your terminal) and will send all tovid output to
``logfile``.


==Analyzing tovid stats==
Starting with version 0.18, [tovid #tovid] writes statistics to
~/.tovid/stats`` in a comma-separated quoted-string
format commonly known as [CSV http://en.wikipedia.org/wiki/Comma-separated_values] (not to be
confused with [CVS http://www.cvshome.org/]).
This makes the statistics easily parsable, particularly if
you want to import them into a spreadsheet for further analysis or
graphing.
Here's how I go about importing the stats into [OpenOffice.org http://www.openoffice.org] Calc:

```
$ cp ~/.tovid/stats ~/.tovid/stats.csv``
```

It helps if the file has a .csv`` extension, because
then OOo Calc assumes it contains comma-separated values. Run OOo Calc, and
open ~/.tovid/stats.csv``. You'll be presented with a
dialog:

[images/ooo_calc_import.png]

The significant options are highlighted; be sure to enable these before
importing. Adjust the From row value until the
starting point is just above the TOVID_VERSION`` line. Hit
OK and you get a nice spreadsheet, with column headings
that match the variable names in [tovid #tovid].



