tovid howto


%!include(xhtml): ''navmenu.html''

This document explains how to create a DVD using the tovid suite.
It assumes you have a collection of videos, in various formats,
and want to end up with a finished DVD with menus. Each step of
the DVD-creation process is explained in detail.


== Getting started ==

Before we begin, we need several things:
- Some videos. Where you get them is up to you.
- The tovid suite of utilities, which you can download from
  [sourceforge.net http://www.sourceforge.net/projects/tovid].
- The [tovid documentation documentation.html], for
  reference on how to install and use tovid
- A command-line interface. Any terminal or console will do.
- Some patience, and perhaps a nice cup of coffee


I'm going to be authoring a DVD with four videos on it:
- ``Serenity.mpg``, a trailer for
    [Serenity http://www.imdb.com/title/tt0379786/], the
    Firefly movie
- ``HHGG.mpg``, a trailer for
    [The Hitchhiker's Guide to the Galaxy http://www.imdb.com/title/tt0371724/] movie
- ``ROTB.mov``, a computer-animated
    [LEGO http://www.lego.com/] short featuring Star Wars
    characters
- ``MGS4.wmv``, a trailer for the PS3 game
    [Metal Gear Solid 4 http://www.konami.jp/gs/kojima_pro/japanese/mgs4_04.html]


== Converting the videos ==

Videos come in all kinds of formats, but DVD only
accepts a few specific standard formats. Fortunately, you don't have to worry much
about it, because the [tovid tovid.html] script does all the conversion for you.
You tell it what video you want to encode (the ``-in`` option),
and what name you want for the output file (the ``-out`` option).
For example:

```
$ tovid -in MGS4.wmv -out Metal_Gear_Solid_4
```

This will convert ``MGS4.wmv`` to NTSC
DVD format, saving the result as ``Metal_Gear_Solid_4.mpg``. Since
this is the output format I want to use, all I have to do is run the above
command on each of my videos:

```
$ tovid -in Serenity.mpg -out Serenity_trailer
$ tovid -in HHGG.mpg -out Hitchhikers_Guide
$ tovid -in ROTB.mpg -out Revenge_of_the_Brick
$ tovid -in MGS4.mpg -out Metal_Gear_Solid_4
```

Note

You can customize your output video
with additional options, for example:

```
$ tovid -pal -half-dvd -in MGS4.wmv -out Metal_Gear_Solid_4
```

This will convert to PAL format, using a "half-sized"
DVD resolution (352x480). There are many other options for further customizing
your output video; see the [tovid tovid.html] documentation, or run
``tovid -help`` to see a complete list of them.
After running a tovid command, it's time to get that cup of coffee.
Video encoding takes a long time! But if all goes well, I'll end up with
four output videos: ``Serenity_trailer.mpg``,
``Hitchhikers_Guide.mpg`` and so on.


== Creating the menu ==

Next, I'd like to create a navigational menu, so that when I play the
DVD, I can choose which video to play. DVD menus are themselves videos, but
they have some extra stuff that makes them behave like menus. But again, you
don't need to worry about all the details; just use the
[makemenu makemenu.html] script:

```
$ makemenu "Serenity trailer" \
           "Hitchhiker's Guide trailer" \
           "Revenge of the Brick" \
           "Metal Gear Solid 4 trailer" \
           MiscTrailers
```

//Note//: The backslash at the end of each line indicates continuation on
the next line; you can enter this command exactly as it appears, with backslashes,
or you can enter it all on a single line, without backslashes.

I specify the four titles I want on the menu by enclosing them each in
double-quotes, separated by spaces. The last thing is the
name I want to use for the menu itself. When this command is done, I should have
a video file called ``MiscTrailers.mpg``.

[images/howto_menu_screenshot.jpg]

When it's eventually authored as a DVD menu, it will have a yellow
highlight that can be used to select a title.


== Defining the structure ==

The next step is to define how the DVD will be structured. The popular
[dvdauthor http://dvdauthor.sourceforge.net/] tool can
create a DVD file structure based on an XML input file in a predetermined
format. But guess what! You don't need to worry about this format either,
because the [makexml makexml.html] script can create it for you. All you need to provide
is the filenames of your menus and videos, along with a few other options.
I'm using a pretty simple structure: a single menu, with four video titles.
Here's the command I would run:

```
$ makexml \
    -menu MiscTrailers.mpg \
        Serenity_trailer.mpg \
        Hitchhikers_Guide.mpg \
        Revenge_of_the_Brick.mpg \
        Metal_Gear_Solid_4.mpg \
    TrailerDisc
```

As you might have guessed, the first filename after ``-menu`` is
the video containing the menu itself. All the filenames after that are the
videos that are linked from that menu, in the same order that they are listed
in the menu. Finally, the last thing is the name to use for output. When this
command finishes, I'll have ``TrailerDisc.xml`` containing
a valid dvdauthor disc structure.


== Authoring and burning ==
The [makedvd makedvd.html] script automates much of the process of authoring and
burning the disc from the XML file created above. All that remains to do is:

```
$ makedvd -burn TrailerDisc.xml
```

You can leave out the ``-burn`` option, if you'd like to
just author the disc and create an ISO image. Then, you can run the same
command again with ``-burn`` to burn the already-created ISO.

