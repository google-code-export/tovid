#! /usr/bin/env python
# metagui

USAGE =\
"""Usage: metagui APPNAME

where APPNAME is the command-line program whose metagui you want to run.
Your metagui apps are saved in ~/.metagui/, where you will be inclined to
edit them (don't worry, metagui code is not scary at all).
"""
# TODO: Support some options like -listapps

import sys
import os
import shutil
import glob

def newer(source, dest):
    """Return True if the source file is more recently modified than the
    destination; False otherwise."""
    source_mod = os.path.getmtime(source)
    if os.path.exists(dest):
        dest_mod = os.path.getmtime(dest)
    else:
        dest_mod = 0
    return source_mod > dest_mod

cur_dir = os.path.dirname(sys.argv[0])
user_apps = os.path.expanduser('~/.metagui/')
shared_apps = os.path.join(cur_dir, os.path.pardir, 'share', 'metagui', 'apps')

# If ~/.metagui doesn't exist, create it
try:
    os.mkdir(user_apps)
except OSError:
    pass
# Copy shared apps to user dir
print "Copying shared applications to %s" %user_apps
for app in glob.glob('%s/*.py' %shared_apps):
    dest = os.path.join(user_apps, os.path.basename(app))
    if os.path.exists(dest) and not newer(app, dest):
        print "  Skipping %s (not modified)" %dest
    else:
        print "  Copying %s" %dest
        shutil.copy(app, dest)

# Print usage notes
if len(sys.argv) < 2:
    print USAGE
    sys.exit()
else:
    apps = sys.argv[1:]

# TODO: For multiple applications, import the application only, and create
# a multi-app GUI
for app in apps:
    appfile = os.path.join(user_apps, '%s.py' %app)
    if os.path.exists(appfile):
        print "Loading '%s' metagui from: %s" %(app, appfile)
        os.system('python %s' %appfile)
    else:
        print "Cannot find metagui for '%s'; file %s not present." %\
              (app, appfile)

