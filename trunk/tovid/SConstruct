# SCons build/install file for tovid

"""What it needs to do:

Targets:
  build ('scons' with no arguments)
  install
  uninstall (equivalent to '-c install')
  dist

To build:
* Build tovid-init from tovid-init.in
* Build manpages from doc/src/LANG sources

To install:
* Install tovid suite bash scripts from src/
* Install libtovid Python modules from libtovid/
* Install manpages built from doc/src/LANG sources

To distribute:
* Build
* Create tovid-VERSION.tar.gz

"""

import glob
import sys
from os import sep   # OS-dependent pathname separator

# -----------------------------------------------------------------------
# Installation directories
# -----------------------------------------------------------------------

# These are kind of a hack until we can figure a platform-independent
# approach to determining correct install locations
prefix = sep.join([sys.prefix, 'local'])        # /usr/local
script_dest = sep.join([prefix, 'bin'])         # /usr/local/bin
man_dest = sep.join([prefix, 'man', 'man1'])    # /usr/local/man/man1
python_dest = sep.join([prefix, 'lib', 'python2.4', 'site-packages'])

# -----------------------------------------------------------------------
# Source files to build/install
# -----------------------------------------------------------------------

# Bash scripts in src/ to be installed to script_dest
bash_scripts = Split("""
    src/idvid
    src/makedvd
    src/makemenu
    src/makeslides
    src/makevcd
    src/makexml
    src/postproc
    src/todisc
    src/todisc-fade-routine
    src/todiscgui
    src/tovid
    src/tovid-batch
    src/tovid-init
    src/tovid-interactive
    src/tovid-stats
    src/tovid-test
    src/tovidgui
    """)

# Python modules in libtovid/ to be installed to python_dest
# If possible, install these in a Pythonic (like distutils) way; all the
# modules to be installed are recursively defined in the __all__ list in
# libtovid/__init__.py.
libtovid_modules = Split("""
    libtovid/__init__.py
    libtovid/cli.py
    libtovid/config.py
    libtovid/media.py
    libtovid/opts.py
    libtovid/standards.py
    libtovid/stats.py
    
    libtovid/layout/disc.py
    libtovid/layout/dvdauthor.py
    libtovid/layout/menu.py
    libtovid/layout/tdl.py
    libtovid/layout/video.py
    
    libtovid/render/__init__.py
    libtovid/render/animation.py
    libtovid/render/drawing.py
    libtovid/render/effect.py
    libtovid/render/flipbook.py
    libtovid/render/layer.py
    libtovid/render/mvg.py
    
    libtovid/transcode/__init__.py
    libtovid/transcode/encoders.py
    libtovid/transcode/subtitles.py
    """)


# Get SCons environment
env = Environment()

# Ensure that Python 2.4 is available
# (needed by cli.py for the 'subprocess' module)
env.EnsurePythonVersion(2, 4)


# -----------------------------------------------------------------------
# Building manpages
# -----------------------------------------------------------------------

doc_src_en = glob.glob("docs/src/en/*.t2t")
doc_src_es = glob.glob("docs/src/es/*.t2t")
doc_src = doc_src_en #+ doc_src_es

# Manual page build rule, using txt2tags
ManBuilder = Builder(action = [['txt2tags', '-t', 'man', 
            '--infile=$SOURCE', 
            '--outfile=$TARGET']],
         suffix = "1")

env.Append(BUILDERS = {'Man' : ManBuilder})

# Build each manpage
for doc in doc_src:
    env.Man(doc)


# -----------------------------------------------------------------------
# Installing bash scripts
# -----------------------------------------------------------------------

env.Install(dir = script_dest, source = bash_scripts)
env.Alias('install', [script_dest])

